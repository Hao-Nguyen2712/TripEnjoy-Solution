@model TripEnjoy.Client.ViewModels.PropertyDetailsVM
@{
    ViewData["Title"] = Model?.Name ?? "Property Details";
}

<div class="container-fluid p-4">
    <!-- Page Header -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <div class="d-flex align-items-center justify-content-between">              
                    <div>
                        <a asp-controller="Properties" asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i>Back to Properties
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Message -->
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@ViewBag.ErrorMessage
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        </div>
    }

    @if (Model != null)
    {
        <!-- Property Details -->
        <div class="row">
            <!-- Main Content -->
            <div class="col-lg-8">
                <!-- Property Images -->
                <div class="card mb-4">
                    <div class="card-body">
                        @if (Model.Images.Any())
                        {
                            var orderedImages = Model.Images.OrderByDescending(img => img.IsPrimary).ToList();
                            <div id="propertyCarousel" class="carousel slide" data-bs-ride="carousel">
                                <div class="carousel-indicators">
                                    @for (int i = 0; i < orderedImages.Count; i++)
                                    {
                                        <button type="button" data-bs-target="#propertyCarousel" data-bs-slide-to="@i" 
                                                class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" 
                                                aria-label="Slide @(i + 1)"></button>
                                    }
                                </div>
                                <div class="carousel-inner">
                                    @for (int i = 0; i < orderedImages.Count; i++)
                                    {
                                        <div class="carousel-item @(i == 0 ? "active" : "")">
                                            <img src="@orderedImages[i].ImageUrl" class="d-block w-100 property-image" alt="@orderedImages[i].Caption">
                                            @if (!string.IsNullOrEmpty(orderedImages[i].Caption))
                                            {
                                                <div class="carousel-caption d-none d-md-block">
                                                    <p>@orderedImages[i].Caption</p>
                                                </div>
                                            }
                                            @* Add a small indicator for cover image *@
                                            @if (orderedImages[i].IsPrimary)
                                            {
                                                <div class="position-absolute top-0 start-0 m-3">
                                                    <span class="badge bg-warning">
                                                        <i class="fas fa-star me-1"></i>Cover Photo
                                                    </span>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                                <button class="carousel-control-prev" type="button" data-bs-target="#propertyCarousel" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#propertyCarousel" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="property-image-placeholder bg-light d-flex align-items-center justify-content-center">
                                <div class="text-center">
                                    <i class="fas fa-image fa-4x text-muted mb-3"></i>
                                    <h6 class="text-muted">No Images Available</h6>
                                    <a asp-controller="Properties" asp-action="ManageImages" asp-route-id="@Model.Id" 
                                       class="btn btn-outline-primary">
                                        <i class="fas fa-plus me-1"></i>Add Images
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Property Description -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-info-circle me-2"></i>Description
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            <p class="mb-0">@Model.Description</p>
                        }
                        else
                        {
                            <p class="text-muted mb-0">
                                <i class="fas fa-edit me-1"></i>No description available. 
                                <a href="#" class="text-decoration-none">Add a description</a> to help guests learn more about your property.
                            </p>
                        }
                    </div>
                </div>

                <!-- Reviews Section -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-star me-2"></i>Reviews & Ratings
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.AverageRating.HasValue && Model.ReviewCount > 0)
                        {
                            <div class="row align-items-center mb-3">
                                <div class="col-md-6">
                                    <div class="d-flex align-items-center">
                                        <div class="text-warning me-3">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                @if (i <= Model.AverageRating)
                                                {
                                                    <i class="fas fa-star fa-lg"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star fa-lg"></i>
                                                }
                                            }
                                        </div>
                                        <div>
                                            <h4 class="mb-0">@Model.AverageRating.Value.ToString("F1")</h4>
                                            <small class="text-muted">Based on @Model.ReviewCount review@(Model.ReviewCount != 1 ? "s" : "")</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 text-md-end">
                                    <a href="#" class="btn btn-outline-primary">
                                        <i class="fas fa-comments me-1"></i>View All Reviews
                                    </a>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <i class="fas fa-star fa-3x text-muted mb-3"></i>
                                <h6 class="text-muted">No Reviews Yet</h6>
                                <p class="text-muted mb-0">Your property hasn't received any reviews yet. Encourage guests to leave reviews after their stay!</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Property Status -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-info-circle me-1"></i>Property Status
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span>Status:</span>
                            <span class="badge @Model.StatusBadgeClass">@Model.Status</span>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span>Created:</span>
                            <span class="text-muted">@Model.CreatedAt.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <span>Property Type:</span>
                            <span class="badge bg-info">@Model.PropertyTypeName</span>
                        </div>
                    </div>
                </div>

                <!-- Location Info -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-map-marker-alt me-1"></i>Location
                        </h6>
                    </div>
                    <div class="card-body">
                        <p class="mb-2"><strong>Address:</strong></p>
                        <p class="text-muted mb-3">@Model.FullAddress</p>
                        <a href="https://maps.google.com?q=@Uri.EscapeDataString(Model.FullAddress)" 
                           target="_blank" 
                           class="btn btn-outline-success btn-sm">
                            <i class="fas fa-map me-1"></i>View on Map
                        </a>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-tools me-1"></i>Quick Actions
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a asp-controller="Properties" asp-action="Edit" asp-route-id="@Model.Id" 
                               class="btn btn-outline-primary">
                                <i class="fas fa-edit me-1"></i>Edit Property
                            </a>
                            <a asp-controller="Properties" asp-action="ManageImages" asp-route-id="@Model.Id" 
                               class="btn btn-outline-success">
                                <i class="fas fa-images me-1"></i>Manage Images
                            </a>
                            <a href="#" class="btn btn-outline-info">
                                <i class="fas fa-bed me-1"></i>Manage Rooms
                            </a>
                            <a href="#" class="btn btn-outline-warning">
                                <i class="fas fa-calendar me-1"></i>View Bookings
                            </a>
                            <hr>
                            <a href="#" class="btn btn-outline-danger">
                                <i class="fas fa-eye-slash me-1"></i>Deactivate Property
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Not Found State -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-exclamation-triangle fa-4x text-warning mb-4"></i>
                        <h4>Property Not Found</h4>
                        <p class="text-muted mb-4">The property you're looking for doesn't exist or you don't have permission to view it.</p>
                        <a asp-controller="Properties" asp-action="Index" class="btn btn-primary">
                            <i class="fas fa-arrow-left me-1"></i>Back to Properties
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        .page-title-box {
            padding-bottom: 1.5rem;
            border-bottom: 1px solid #eee;
            margin-bottom: 1.5rem;
        }
        
        .property-image {
            height: 400px;
            object-fit: cover;
            border-radius: 0.375rem;
        }
        
        .property-image-placeholder {
            height: 400px;
            border-radius: 0.375rem;
        }
        
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border: 1px solid rgba(0, 0, 0, 0.125);
        }
        
        .carousel-indicators button {
            background-color: rgba(255, 255, 255, 0.5);
        }
        
        .carousel-indicators button.active {
            background-color: #fff;
        }
        
        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 50%;
            padding: 20px;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize carousel if images exist
            @if (Model?.Images.Any() == true)
            {
                <text>
                var carousel = new bootstrap.Carousel(document.getElementById('propertyCarousel'), {
                    interval: 5000,
                    wrap: true
                });
                
                // Log cover image status for debugging
                console.log('Carousel initialized with cover image first');
                </text>
            }
        });
    </script>
}