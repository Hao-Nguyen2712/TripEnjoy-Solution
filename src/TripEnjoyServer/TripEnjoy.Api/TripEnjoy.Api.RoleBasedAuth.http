### TripEnjoy Role-Based Authentication Tests
### Base URL
@baseUrl = https://localhost:7199

### Test 1: User Login Step One (Valid User Role)
POST {{baseUrl}}/api/v1/auth/login-user-step-one
Content-Type: application/json

{
    "email": "user@tripenjoy.com",
    "password": "Test123!"
}

### Test 2: Partner Login Step One (Valid Partner Role)  
POST {{baseUrl}}/api/v1/auth/login-partner-step-one
Content-Type: application/json

{
    "email": "partner@tripenjoy.com", 
    "password": "Test123!"
}

### Test 3: User trying Partner endpoint (Should fail with RoleMismatch)
POST {{baseUrl}}/api/v1/auth/login-partner-step-one
Content-Type: application/json

{
    "email": "user@tripenjoy.com",
    "password": "Test123!"
}

### Test 4: Partner trying User endpoint (Should fail with RoleMismatch)
POST {{baseUrl}}/api/v1/auth/login-user-step-one
Content-Type: application/json

{
    "email": "partner@tripenjoy.com",
    "password": "Test123!"
}

### Test 5: Generic Login (Should work for any role - Backward compatibility)
POST {{baseUrl}}/api/v1/auth/login-step-one
Content-Type: application/json

{
    "email": "user@tripenjoy.com",
    "password": "Test123!"
}

### Test 6: Login Step Two (Complete the flow after receiving OTP)
POST {{baseUrl}}/api/v1/auth/login-step-two
Content-Type: application/json

{
    "email": "user@tripenjoy.com",
    "otp": "123456"
}

### Test 7: Invalid credentials (Should fail with LoginFailed)
POST {{baseUrl}}/api/v1/auth/login-user-step-one
Content-Type: application/json

{
    "email": "nonexistent@tripenjoy.com",
    "password": "wrongpassword"
}

### Test 8: Invalid email format (Should fail validation)
POST {{baseUrl}}/api/v1/auth/login-user-step-one
Content-Type: application/json

{
    "email": "invalid-email",
    "password": "Test123!"
}